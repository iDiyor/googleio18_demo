// Code generated by protoc-gen-go. DO NOT EDIT.
// source: maps.proto

/*
Package maps is a generated protocol buffer package.

It is generated from these files:
	maps.proto

It has these top-level messages:
	GetDistanceRequest
	GetDistanceResponse
	Location
	EmptyResponse
*/
package maps

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetDistanceRequest struct {
	Origin string `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Dest   string `protobuf:"bytes,2,opt,name=dest" json:"dest,omitempty"`
}

func (m *GetDistanceRequest) Reset()                    { *m = GetDistanceRequest{} }
func (m *GetDistanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDistanceRequest) ProtoMessage()               {}
func (*GetDistanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetDistanceRequest) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *GetDistanceRequest) GetDest() string {
	if m != nil {
		return m.Dest
	}
	return ""
}

type GetDistanceResponse struct {
	Distance int64 `protobuf:"varint,1,opt,name=distance" json:"distance,omitempty"`
}

func (m *GetDistanceResponse) Reset()                    { *m = GetDistanceResponse{} }
func (m *GetDistanceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDistanceResponse) ProtoMessage()               {}
func (*GetDistanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetDistanceResponse) GetDistance() int64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

type Location struct {
	Lon float64 `protobuf:"fixed64,1,opt,name=lon" json:"lon,omitempty"`
	Lat float64 `protobuf:"fixed64,2,opt,name=lat" json:"lat,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Location) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *Location) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

type EmptyResponse struct {
}

func (m *EmptyResponse) Reset()                    { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()               {}
func (*EmptyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*GetDistanceRequest)(nil), "GetDistanceRequest")
	proto.RegisterType((*GetDistanceResponse)(nil), "GetDistanceResponse")
	proto.RegisterType((*Location)(nil), "Location")
	proto.RegisterType((*EmptyResponse)(nil), "EmptyResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Maps service

type MapsClient interface {
	GetDistance(ctx context.Context, in *GetDistanceRequest, opts ...grpc.CallOption) (*GetDistanceResponse, error)
	StreamLocation(ctx context.Context, opts ...grpc.CallOption) (Maps_StreamLocationClient, error)
}

type mapsClient struct {
	cc *grpc.ClientConn
}

func NewMapsClient(cc *grpc.ClientConn) MapsClient {
	return &mapsClient{cc}
}

func (c *mapsClient) GetDistance(ctx context.Context, in *GetDistanceRequest, opts ...grpc.CallOption) (*GetDistanceResponse, error) {
	out := new(GetDistanceResponse)
	err := grpc.Invoke(ctx, "/Maps/GetDistance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapsClient) StreamLocation(ctx context.Context, opts ...grpc.CallOption) (Maps_StreamLocationClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Maps_serviceDesc.Streams[0], c.cc, "/Maps/StreamLocation", opts...)
	if err != nil {
		return nil, err
	}
	x := &mapsStreamLocationClient{stream}
	return x, nil
}

type Maps_StreamLocationClient interface {
	Send(*Location) error
	CloseAndRecv() (*EmptyResponse, error)
	grpc.ClientStream
}

type mapsStreamLocationClient struct {
	grpc.ClientStream
}

func (x *mapsStreamLocationClient) Send(m *Location) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mapsStreamLocationClient) CloseAndRecv() (*EmptyResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(EmptyResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Maps service

type MapsServer interface {
	GetDistance(context.Context, *GetDistanceRequest) (*GetDistanceResponse, error)
	StreamLocation(Maps_StreamLocationServer) error
}

func RegisterMapsServer(s *grpc.Server, srv MapsServer) {
	s.RegisterService(&_Maps_serviceDesc, srv)
}

func _Maps_GetDistance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDistanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapsServer).GetDistance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Maps/GetDistance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapsServer).GetDistance(ctx, req.(*GetDistanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Maps_StreamLocation_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MapsServer).StreamLocation(&mapsStreamLocationServer{stream})
}

type Maps_StreamLocationServer interface {
	SendAndClose(*EmptyResponse) error
	Recv() (*Location, error)
	grpc.ServerStream
}

type mapsStreamLocationServer struct {
	grpc.ServerStream
}

func (x *mapsStreamLocationServer) SendAndClose(m *EmptyResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mapsStreamLocationServer) Recv() (*Location, error) {
	m := new(Location)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Maps_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Maps",
	HandlerType: (*MapsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDistance",
			Handler:    _Maps_GetDistance_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamLocation",
			Handler:       _Maps_StreamLocation_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "maps.proto",
}

func init() { proto.RegisterFile("maps.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x3f, 0x4b, 0xc5, 0x30,
	0x14, 0xc5, 0x89, 0xef, 0xf1, 0x68, 0xaf, 0x58, 0xe5, 0x56, 0xa4, 0x74, 0x92, 0x4c, 0x5d, 0x0c,
	0xa8, 0x8b, 0xa3, 0x83, 0xe2, 0xa2, 0x4b, 0xfc, 0x04, 0xb1, 0x0d, 0x12, 0xb0, 0xb9, 0xb1, 0xb9,
	0x0e, 0x7e, 0x7b, 0x69, 0xfa, 0x07, 0x8b, 0x6e, 0xe7, 0xfe, 0x86, 0xf3, 0x3b, 0x09, 0x40, 0x6f,
	0x42, 0x54, 0x61, 0x20, 0x26, 0x79, 0x0f, 0xf8, 0x64, 0xf9, 0xc1, 0x45, 0x36, 0xbe, 0xb5, 0xda,
	0x7e, 0x7e, 0xd9, 0xc8, 0x78, 0x01, 0x07, 0x1a, 0xdc, 0xbb, 0xf3, 0x95, 0xb8, 0x14, 0x4d, 0xae,
	0xe7, 0x0b, 0x11, 0xf6, 0x9d, 0x8d, 0x5c, 0x1d, 0x25, 0x9a, 0xb2, 0xbc, 0x86, 0x72, 0xd3, 0x10,
	0x03, 0xf9, 0x68, 0xb1, 0x86, 0xac, 0x9b, 0x59, 0x2a, 0xd9, 0xe9, 0xf5, 0x96, 0x0a, 0xb2, 0x67,
	0x6a, 0x0d, 0x3b, 0xf2, 0x78, 0x06, 0xbb, 0x0f, 0x9a, 0x3c, 0x42, 0x8f, 0x31, 0x11, 0x33, 0x39,
	0x46, 0x62, 0x58, 0x9e, 0xc2, 0xc9, 0x63, 0x1f, 0xf8, 0x7b, 0x29, 0xbf, 0x21, 0xd8, 0xbf, 0x98,
	0x10, 0xf1, 0x0e, 0x8e, 0x7f, 0xb9, 0xb1, 0x54, 0x7f, 0xdf, 0x52, 0x9f, 0xab, 0xff, 0xe6, 0x5d,
	0x41, 0xf1, 0xca, 0x83, 0x35, 0xfd, 0x3a, 0x24, 0x57, 0x4b, 0xac, 0x0b, 0xb5, 0xd1, 0x35, 0xe2,
	0xed, 0x90, 0x7e, 0xeb, 0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x01, 0x2a, 0x92, 0x3b, 0x01,
	0x00, 0x00,
}
